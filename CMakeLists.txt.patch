--- old/CMakeLists.txt	2011-07-29 10:37:48.000000000 +0200
+++ new/CMakeLists.txt	2019-02-19 09:22:28.605396467 +0100
@@ -5,7 +5,6 @@
     CMAKE_POLICY(SET CMP0003 NEW)
 ENDIF(COMMAND CMAKE_POLICY)
 
-SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
 
 INCLUDE(CheckCCompilerFlag)
 INCLUDE(CheckCSourceCompiles)
@@ -14,8 +13,6 @@
 INCLUDE(CheckIncludeFiles)
 INCLUDE(CheckLibraryExists)
 INCLUDE(CheckSharedFunctionExists)
-INCLUDE(FindPkgConfig)
-INCLUDE(UsePkgConfig)
 INCLUDE(CheckFileOffsetBits)
 
 PROJECT(ALURE)
@@ -178,10 +175,8 @@
     IF(NOT HAVE_DLFCN_H OR NOT HAVE_LIBDL)
         SET(DYNLOAD OFF)
     ENDIF(NOT HAVE_DLFCN_H OR NOT HAVE_LIBDL)
-    PKG_CHECK_MODULES(OPENAL openal)
 ENDIF(WIN32)
 
-IF(NOT OPENAL_FOUND)
     FIND_PACKAGE(OpenAL)
     IF(NOT OPENAL_FOUND)
         MESSAGE(FATAL_ERROR "OpenAL not found!\nPlease try setting the OPENALDIR environment variable and try again.")
@@ -192,10 +187,6 @@
 
     INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
     SET(OPENAL_LIBRARIES ${OPENAL_LIBRARY})
-ELSE(NOT OPENAL_FOUND)
-    INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIRS})
-    LINK_DIRECTORIES(${OPENAL_LIBRARY_DIRS})
-ENDIF(NOT OPENAL_FOUND)
 
 # Base source files
 SET(ALURE_OBJS  src/alure.cpp
@@ -210,19 +201,11 @@
 
 # SndFile support
 IF(SNDFILE)
-    PKG_CHECK_MODULES(SNDFILE sndfile)
-    IF(SNDFILE_FOUND)
-        SET(HAS_SNDFILE 1)
-        LINK_DIRECTORIES(${SNDFILE_LIBRARY_DIRS})
-        SET_SOURCE_FILES_PROPERTIES(src/codec_sndfile.cpp PROPERTIES
-                                    COMPILE_FLAGS "${SNDFILE_CFLAGS}")
-    ELSE(SNDFILE_FOUND)
         FIND_PACKAGE(SndFile)
         IF(SNDFILE_FOUND)
             SET(HAS_SNDFILE 1)
             INCLUDE_DIRECTORIES(${SNDFILE_INCLUDE_DIRS})
         ENDIF(SNDFILE_FOUND)
-    ENDIF(SNDFILE_FOUND)
     IF(HAS_SNDFILE)
         SET(ALURE_OBJS ${ALURE_OBJS} src/codec_sndfile.cpp)
     ENDIF(HAS_SNDFILE)
@@ -232,42 +215,12 @@
 
 # Vorbis support
 IF(VORBIS)
-    PKG_CHECK_MODULES(VORBISFILE vorbisfile)
-    IF(VORBISFILE_FOUND)
-        SET(HAS_VORBISFILE 1)
-        LINK_DIRECTORIES(${VORBISFILE_LIBRARY_DIRS})
-        SET_SOURCE_FILES_PROPERTIES(src/codec_vorbisfile.cpp PROPERTIES
-                                    COMPILE_FLAGS "${VORBISFILE_CFLAGS}")
-    ELSE(VORBISFILE_FOUND)
         FIND_PACKAGE(OggVorbis)
         IF(OGGVORBIS_FOUND)
             SET(HAS_VORBISFILE 1)
             INCLUDE_DIRECTORIES(${OGGVORBIS_INCLUDE_DIRS})
             SET(VORBISFILE_LIBRARIES ${OGGVORBIS_LIBRARIES})
         ENDIF(OGGVORBIS_FOUND)
-    ENDIF(VORBISFILE_FOUND)
-    IF(NOT HAS_VORBISFILE)
-        PKG_CHECK_MODULES(VORBISIDEC vorbisidec)
-        IF(NOT VORBISIDEC_FOUND)
-            CHECK_INCLUDE_FILE(tremor/ivorbisfile.h HAVE_TREMOR_IVORBISFILE_H)
-            IF(HAVE_TREMOR_IVORBISFILE_H)
-                CHECK_SHARED_FUNCTION_EXISTS(ov_open "tremor/ivorbisfile.h" vorbisidec "" HAVE_LIBVORBISIDEC)
-                IF(DYNLOAD OR HAVE_LIBVORBISIDEC)
-                    SET(HAS_VORBISFILE 1)
-                    IF(HAVE_LIBVORBISIDEC)
-                        SET(VORBISFILE_LIBRARIES "vorbisidec")
-                    ENDIF(HAVE_LIBVORBISIDEC)
-                    SET_SOURCE_FILES_PROPERTIES(src/codec_vorbisfile.cpp PROPERTIES
-                                                COMPILE_FLAGS "-DHAS_VORBISIDEC")
-                ENDIF(DYNLOAD OR HAVE_LIBVORBISIDEC)
-            ENDIF(HAVE_TREMOR_IVORBISFILE_H)
-        ELSE(NOT VORBISIDEC_FOUND)
-            SET(HAS_VORBISFILE 1)
-            LINK_DIRECTORIES(${VORBISIDEC_LIBRARY_DIRS})
-            SET_SOURCE_FILES_PROPERTIES(src/codec_vorbisfile.cpp PROPERTIES
-                                        COMPILE_FLAGS "${VORBISIDEC_CFLAGS} -DHAS_VORBISIDEC")
-        ENDIF(NOT VORBISIDEC_FOUND)
-    ENDIF(NOT HAS_VORBISFILE)
     IF(HAS_VORBISFILE)
         SET(ALURE_OBJS ${ALURE_OBJS} src/codec_vorbisfile.cpp)
     ENDIF(HAS_VORBISFILE)
@@ -291,24 +244,12 @@
 
 # MPG123 support
 IF(MPG123)
-    PKG_CHECK_MODULES(MPG123 libmpg123)
-    IF(NOT MPG123_FOUND)
-        CHECK_INCLUDE_FILE(mpg123.h HAVE_MPG123_H)
-        IF(HAVE_MPG123_H)
-            CHECK_SHARED_FUNCTION_EXISTS(mpg123_init "mpg123.h" mpg123 "" HAVE_LIBMPG123)
-            IF(DYNLOAD OR HAVE_LIBMPG123)
-                SET(HAS_MPG123 1)
-                IF(HAVE_LIBMPG123)
-                    SET(MPG123_LIBRARIES "mpg123")
-                ENDIF(HAVE_LIBMPG123)
-            ENDIF(DYNLOAD OR HAVE_LIBMPG123)
-        ENDIF(HAVE_MPG123_H)
-    ELSE(NOT MPG123_FOUND)
+    IF(MPG123_FOUND)
         SET(HAS_MPG123 1)
         LINK_DIRECTORIES(${MPG123_LIBRARY_DIRS})
         SET_SOURCE_FILES_PROPERTIES(src/codec_mpg123.cpp PROPERTIES
                                     COMPILE_FLAGS "${MPG123_CFLAGS}")
-    ENDIF(NOT MPG123_FOUND)
+    ENDIF(MPG123_FOUND)
     IF(HAS_MPG123)
         SET(ALURE_OBJS ${ALURE_OBJS} src/codec_mpg123.cpp)
     ENDIF(HAS_MPG123)
@@ -360,24 +301,12 @@
 
 # FluidSynth support
 IF(FLUIDSYNTH)
-    PKG_CHECK_MODULES(FLUIDSYNTH fluidsynth>=1.1.1)
-    IF(NOT FLUIDSYNTH_FOUND)
-        CHECK_INCLUDE_FILE(fluidsynth.h HAVE_FLUIDSYNTH_H)
-        IF(HAVE_FLUIDSYNTH_H)
-            CHECK_SHARED_FUNCTION_EXISTS(new_fluid_synth "fluidsynth.h" fluidsynth "" HAVE_LIBFLUIDSYNTH)
-            IF(DYNLOAD OR HAVE_LIBFLUIDSYNTH)
-                SET(HAS_FLUIDSYNTH 1)
-                IF(HAVE_LIBFLUIDSYNTH)
-                    SET(FLUIDSYNTH_LIBRARIES "fluidsynth")
-                ENDIF(HAVE_LIBFLUIDSYNTH)
-            ENDIF(DYNLOAD OR HAVE_LIBFLUIDSYNTH)
-        ENDIF(HAVE_FLUIDSYNTH_H)
-    ELSE(NOT FLUIDSYNTH_FOUND)
+    IF(FLUIDSYNTH_FOUND)
         SET(HAS_FLUIDSYNTH 1)
         LINK_DIRECTORIES(${FLUIDSYNTH_LIBRARY_DIRS})
         SET_SOURCE_FILES_PROPERTIES(src/codec_fluidsynth.cpp PROPERTIES
                                     COMPILE_FLAGS "${FLUIDSYNTH_CFLAGS}")
-    ENDIF(NOT FLUIDSYNTH_FOUND)
+    ENDIF(FLUIDSYNTH_FOUND)
     IF(HAS_FLUIDSYNTH)
         SET(ALURE_OBJS ${ALURE_OBJS} src/codec_fluidsynth.cpp)
     ENDIF(HAS_FLUIDSYNTH)
